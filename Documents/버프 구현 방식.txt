버프 구현 방식 (현재는 1번 사용)

1. 인터페이스 방식
 모든 버프를 각각의 클래스로 제작하고, 그 버프가 발동되는 조건과 효과를 상속한 인터페이스로 결정한다.
장점: 각각의 버프를 구현하기에 가장 간단하다.
단점: 메모리, 파일 수?

2. 스크립터블 오브젝트 방식
 모든 조건과 모든 효과를 각각 개별로 구현해두고 모든 버프를 스크립터블 오브젝트로 만들어 하나씩 설정한다.
장점: 메모리 절약
단점: 유지보수가 어렵다.(조건과 효과를 나눠 개발하기 때문에 모든 경우의 수를 다 구현해야 한다.)

3. 함수 방식
 모든 버프를 하나의 클래스에서 각각의 함수로 제작한다.
장점: 구현은 쉽다.
단점: 끔찍한 가독성(최소 코드 몇만줄...)